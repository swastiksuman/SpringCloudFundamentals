FROM openjdk:12-alpine
LABEL maintainer="swastiksuman@gmail.com"
VOLUME /tmp

#ENV NODE_VERSION=12.6.0
#RUN apt install -y curl
#RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
#ENV NVM_DIR=/root/.nvm
#RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
#RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
#RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
#ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
#RUN node --version
#RUN npm --version

RUN apk update && apk add bash
RUN apk add --update nodejs npm

# Add the testing repository to your Alpine Linux Docker
RUN echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
# install RabbitMQ from testing branch
RUN apk add rabbitmq-server@testing

#configure Erlang cookie
RUN touch /usr/lib/rabbitmq/.erlang.cookie \
 && echo your-favourite-erlang-cookie > /usr/lib/rabbitmq/.erlang.cookie \
 && chown rabbitmq:rabbitmq /usr/lib/rabbitmq/.erlang.cookie \
 && chmod 700 /usr/lib/rabbitmq/.erlang.cookie

EXPOSE 8761
EXPOSE 8080
EXPOSE 8081
ARG JAR_FILE1=discovery-server/target/discovery-server-0.0.1-SNAPSHOT.jar
ARG JAR_FILE2=client-first/target/client-first-0.0.1-SNAPSHOT.jar
ARG JAR_FILE3=service-first/target/service-first-0.0.1-SNAPSHOT.jar
ADD ${JAR_FILE1} discovery-server.jar
ADD ${JAR_FILE2} client-first.jar
ADD ${JAR_FILE3} service-first.jar
CMD java -jar discovery-server.jar
CMD java -jar service-first.jar
